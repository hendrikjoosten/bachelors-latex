\chapter{Data Fusion and State Estimation}
This chapter is dedicated the explaining the mathematical methods and models used to fuse data generated by the cameras and IMU.

A good starting point for this chapter would be to define the states of interest of our system. These states are predicted by EKF using various measurements relating directly and indirectly to them. The following tables specifies the parameters used to symbolize the states of the system.
   
\begin{table}[!ht]
\centering
\label{statesForEkf}
\begin{tabular}{ll}
State & Description \\
$x_{body}$  	&x Position of body w.r.t. the inertial frame\\
$y_{body}$     &y Position of body w.r.t. the inertial frame\\
$z_{body}$     &z Position of body w.r.t. the inertial frame\\
$\phi_{body}$      &Roll of body w.r.t. the inertial frame\\
$\theta_{body}$    &Pitch of body w.r.t. the inertial frame\\
$\psi_{body}$      &Yaw of body w.r.t. the inertial frame\\
$\theta_{LH}$     &Pitch of left thigh w.r.t. left hip\\
$\psi_{LH}$      &Yaw of left thigh w.r.t. left hip\\
$\theta_{LK}$    &Pitch of left calf w.r.t. left knee\\
$\theta_{LA}$   &Pitch of left foot w.r.t. left ankle\\
$\theta_{RH}$    &Pitch of right thigh w.r.t. right hip\\
$\psi_{RH}$      &Yaw of right thigh w.r.t. right hip\\
$\theta_{RK}$   &Pitch of the right calf w.r.t. right knee\\
$\theta_{RA}$  &Pitch of the right foot w.r.t. the right ankle\\
\end{tabular}
\caption{Table showing the different states of the model to be determined by the EKF}
\end{table}

Our system is not only concerned with these positional and angular elements, but also how they change over time. These rates where defined as the derivative of the states with respect to time. The first derivative serving as velocity and angular velocity, while the second derivative serving as acceleration and angular acceleration. Here the vector \textbf{$x$} serves as a element of our state vector \textbf{$X$}.

$$ 					\textbf{x} = [ 
x_{body}        	\; 	    	
y_{body}        	\;    	 	    
z_{body}        	\;  
\phi_{body}     	\;    		    
\theta_{body}   	\;   	
\psi_{body}     	\;    
\theta_{LH}    		\;
\psi_{LH}   		\;
\theta_{LK}   		\;
\theta_{LA}   		\;
\theta_{RH}    		\;
\psi_{RH}    		\;
\theta_{RK}   		\;
\theta_{RA}  		
]					$$ 

The vector \textbf{$x$} contains 14 elements.

$$	\textbf{X}=[\textbf{x} \; \dot{\textbf{x}} \; \ddot{\textbf{x}}] $$

From this it is clear that our state vector \textbf{$X$} contains 42 elements. 

\section{Prediction Equations}
The fundamental assumption made when deriving the prediction equations for our states was that the acceleration (both linear and angular) was constant between sampling intervals. It would therefore stand that for the positional states of the filter $(x_{body} \; y_{body} \; z_{body})$ and the angular states $(\theta_{body} \; ... \; \theta_{RA})$ could be predicted using:

$$ \ddot{p}_{k+1} = \ddot{p}_{k} + \sigma_{\ddot{p}}^{2} $$
$$ \dot{p}_{k+1} = \dot{p}_{k} + \ddot{p}_{k}T + \sigma_{\dot{p}}^{2} $$
$$ p_{k+1} = p_{k} + \dot{p}_{k}T + \sigma_{p}^{2} $$

for the positional states and:

$$ \ddot{\theta}_{k+1} = \ddot{\alpha}_{k} + \sigma_{\ddot{\alpha}}^{2} $$
$$ \dot{\alpha}_{k+1} = \dot{\alpha}_{k} + \ddot{\alpha}_{k}T + \sigma_{\dot{\alpha}}^{2} $$
$$ \alpha_{k+1} = \alpha_{k} + \dot{\alpha}_{k}T + \sigma_{\alpha}^{2} $$

for the angular states.

These prediction equations where created in MATLAB using symbolic functions.

\section{Measurement Equations}

\subsection{Euler Matrices}

$$
Roll(\phi) = 
\begin{bmatrix} 
1 & 0 & 0 \\ 
0 & \cos{\phi} & -\sin{\phi} \\ 
0 & \sin{\phi} & \cos{\phi}  
\end{bmatrix}
$$


$$
Pitch(\theta) = 
\begin{bmatrix} 
\cos{\theta} & 0 & \sin{\theta} \\ 
0 & 1 & 0 \\ 
-\sin{\theta} & 0 & \cos{\theta}  
\end{bmatrix}
$$


$$
Yaw(\psi) = 
\begin{bmatrix} 
\cos{\psi} & -\sin{\psi} & 0 \\ 
\sin{\psi} & \cos{\psi} & 0 \\ 
0 & 0 & 1  
\end{bmatrix}
$$


\subsection{Direct Cosine Matrix}



\section{Measurement equations}

\textbf{front cameras}\\
point 1 right knee\\
point 2 left knee\\
point 3 right foot\\
point 4 left foot\\

\textbf{back cameras}\\
point 1 right calf\\
point 2 left calf\\
point 3 right heel\\
point 4 left heel\\

\textbf{front}\\
right knee
$$ p1xyz = bodyY + bodyZ + R1 * Thigh $$
left knee
$$ p2xyz = bodyY + bodyZ + R1 * Thigh $$
right foot
$$ p3xyz = bodyY + bodyZ + R1 * Thigh + R2 * Calf + R3 * Foot $$
left foot
$$ p4xyz = bodyY + bodyZ + R1 * Thigh + R2 * Calf + R3 * Foot $$

\textbf{back}\\
right calf
$$ p1xyz = bodyY + bodyZ + R1 * Thigh + R2 * 0.5 * Calf $$
left calf
$$ p2xyz = bodyY + bodyZ + R1 * Thigh + R2 * 0.5 * Calf $$
right heel
$$ p2xyz = bodyY + bodyZ + R1 * Thigh + R2 * Calf $$
left heel
$$ p2xyz = bodyY + bodyZ + R1 * Thigh + R2 * Calf $$

\section{Understanding the Data Sources}

It is important to understand the different parameters that mathematically quantify cameras. These parameters can be devided into \textit{extrinsic} and \textit{extrinsic}. Extrinsic camera variables related to the cameras position in the inertial frame and the direction the camera is facing. These can be summarized by the extrinsic camera matrix 

$$[ R \, |\, \boldsymbol{t}] = 
\left[ \begin{array}{ccc|c} 
r_{1,1} & r_{1,2} & r_{1,3} & t_1 \\
r_{2,1} & r_{2,2} & r_{2,3} & t_2 \\
r_{3,1} & r_{3,2} & r_{3,3} & t_3 \\
\end{array} \right]$$



\section{State Estimation}
This section will mathematically explain the Kalman filter and its implementation in this project.

Process equation of the kalam filter.
from states to emasurements
$$ X_{k+1} = FX_{k} + w_{k}  $$

our state, contained in the vector X can be estimated by applying the process matrix F to our current known state. the term w is the noise variable that accounts for process noise.

Measurement equations
from measurements to states.
$$ Y_k = H_{k}X_{k} + v_{k} $$

w will be contained int he matrix Q

while v will be contained in the matrix R1


linearizing nonlinear system we get the EKF


\section{Q Matrix, R Matrix and Initialization}
This section will discuss the final components of the EKF namely the Q matrix containing the various process noise variations, R matrix containing the various measurement noise variances and the initial state values.

\subsection{Defining the Q Matrix}
From the above equations we can see that the Q matrix must have dimensions of $n*n$, where $n$ in this equation is the total amount of states. As previously defined in this section our filter operates over 42 states, giving Q a size of $42*42$. All the variance parameters will be contained on the diagonal of the matrix with all other entries being zero.

Finding the 

\subsection{Defining the R Matrix}
The R matrix relates to the measurement variables and must therefore have size of $m*m$, where $m$ is the amount of inputs the EKF.

\subsection{Choosing Initial States}
The subject was stationary during the initial stages of the run. This allows us to initialize our state vector as a


\subsection{Initializing the Covariance Matrix P}

The initial covariance was initiales with relatively small values


 








